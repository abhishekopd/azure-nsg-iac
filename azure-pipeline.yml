trigger:
  branches:
    include:
      - main

variables:
  Agent.Source.Git.ShallowFetchDepth: 10

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: GitModifiedFilesStage
  jobs:
  - job: gitModifiedFilesJob
    steps:
      - powershell: |
              CD "$(System.DefaultWorkingDirectory)"
              Get-ChildItem -Path $(System.DefaultWorkingDirectory)
              $modifiedfiles = (git diff --name-only HEAD HEAD~1)
              $modifiedfiles | ForEach-Object {
              $FileName = $_
              Write-Output "FileName" $FileName

              IF (($FileName -ilike "*dev.*") -and (Test-Path $FileName)) {
              Add-Content -Path $(system.defaultworkingdirectory)/dev.txt -Value $FileName
              Write-Output "##vso[task.setvariable variable=devBuild]true"
              Write-Output "##vso[task.setvariable variable=DEV;isOutput=true]DEVDeploy" 
              }
              IF (($FileName -ilike "*qc.*") -and (Test-Path $FileName)) {
              Add-Content -Path $(system.defaultworkingdirectory)/qc.txt -Value $FileName
              Write-Output "##vso[task.setvariable variable=qcBuild]true"
              Write-Output "##vso[task.setvariable variable=QC;isOutput=true]QCDeploy"  
              }
              IF (($FileName -ilike "*prod.*") -and (Test-Path $FileName)) {
              Add-Content -Path $(system.defaultworkingdirectory)/prod.txt -Value $FileName
              Write-Output "##vso[task.setvariable variable=prodBuild]true"
              Write-Output "##vso[task.setvariable variable=PROD;isOutput=true]PRODDeploy" 
              }
              }
        name: gitModifiedFilesStep      
      - task: PublishBuildArtifacts@1
        displayName: Publish Build Artifact - Dev
        condition: eq(variables['devBuild'],'true')
        inputs:
          PathtoPublish: "$(Agent.BuildDirectory)/s/dev.txt"
          ArtifactName: "devTempFile"
          publishLocation: "Container"
      - task: PublishBuildArtifacts@1
        displayName: Publish Build Artifact - QC
        condition: eq(variables['qcBuild'],'true')
        inputs:
          PathtoPublish: "$(Agent.BuildDirectory)/s/qc.txt"
          ArtifactName: "qcTempFile"
          publishLocation: "Container"
      - task: PublishBuildArtifacts@1
        displayName: Publish Build Artifact - PROD
        condition: eq(variables['prodBuild'],'true')
        inputs:
          PathtoPublish: "$(Agent.BuildDirectory)/s/prod.txt"
          ArtifactName: "prodTempFile"
          publishLocation: "Container"

- stage: DEV
  displayName: 'Deploy DEV'
  condition: eq(dependencies.GitModifiedFilesStage.outputs['gitModifiedFilesJob.gitModifiedFilesStep.DEV'],'DEVDeploy')
  dependsOn:
  - GitModifiedFilesStage
  jobs:
  - job: TerraformApply
    displayName: 'Terraform Apply'
    steps:
    - checkout: self
    - task: DownloadBuildArtifacts@0
      displayName: Download the artifact - Dev
      inputs:
        buildType: "current"
        downloadType: "single"
        artifactName: "devTempFile"
        downloadPath: "$(System.ArtifactsDirectory)"
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'    
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzDO-SC'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        addSpnToEnvironment: true
        inlineScript: |

          export ARM_CLIENT_ID=$servicePrincipalId
          export ARM_CLIENT_SECRET=$servicePrincipalKey
          export ARM_TENANT_ID=$tenantId
          export ARM_SUBSCRIPTION_ID=$(az account show --query id | xargs)

          FileNames=$(System.ArtifactsDirectory)/devTempFile/dev.txt
          echo "FileNames: $FileNames"
          echo "FileNames Count: `echo $FileNames|wc -l`"
          for fileLines in `cat $FileNames`;
            do
              subnet=`echo "$fileLines" | cut -d'-' -f2`
              terraform init
              terraform workspace select -or-create=true dev-$subnet
              terraform apply -var-file=$fileLines -auto-approve
            done

- stage: QC
  displayName: 'Deploy QC'
  condition: eq(dependencies.GitModifiedFilesStage.outputs['gitModifiedFilesJob.gitModifiedFilesStep.QC'],'QCDeploy')
  dependsOn:
  - GitModifiedFilesStage
  jobs:
  - job: TerraformApply
    displayName: 'Terraform Apply'
    steps:
    - checkout: self
    - task: DownloadBuildArtifacts@0
      displayName: Download the artifact - QC
      inputs:
        buildType: "current"
        downloadType: "single"
        artifactName: "qcTempFile"
        downloadPath: "$(System.ArtifactsDirectory)"
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'    
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzDO-SC'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        addSpnToEnvironment: true
        inlineScript: |

          export ARM_CLIENT_ID=$servicePrincipalId
          export ARM_CLIENT_SECRET=$servicePrincipalKey
          export ARM_TENANT_ID=$tenantId
          export ARM_SUBSCRIPTION_ID=$(az account show --query id | xargs)

          FileNames=$(System.ArtifactsDirectory)/qcTempFile/qc.txt
          echo "FileNames: $FileNames"
          echo "FileNames Count: `echo $FileNames|wc -l`"
          for fileLines in `cat $FileNames`;
            do
              subnet=`echo "$fileLines" | cut -d'-' -f2`
              terraform init
              terraform workspace select -or-create=true qc-$subnet
              terraform apply -var-file=$fileLines -auto-approve
            done


- stage: PROD
  displayName: 'Deploy PROD'
  condition: eq(dependencies.GitModifiedFilesStage.outputs['gitModifiedFilesJob.gitModifiedFilesStep.PROD'],'PRODDeploy')
  dependsOn:
  - GitModifiedFilesStage
  jobs:
  - job: TerraformApply
    displayName: 'Terraform Apply'
    steps:
    - checkout: self
    - task: DownloadBuildArtifacts@0
      displayName: Download the artifact - PROD
      inputs:
        buildType: "current"
        downloadType: "single"
        artifactName: "prodTempFile"
        downloadPath: "$(System.ArtifactsDirectory)"
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'    
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzDO-SC'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        addSpnToEnvironment: true
        inlineScript: |

          export ARM_CLIENT_ID=$servicePrincipalId
          export ARM_CLIENT_SECRET=$servicePrincipalKey
          export ARM_TENANT_ID=$tenantId
          export ARM_SUBSCRIPTION_ID=$(az account show --query id | xargs)

          FileNames=$(System.ArtifactsDirectory)/prodTempFile/prod.txt
          echo "FileNames: $FileNames"
          echo "FileNames Count: `echo $FileNames|wc -l`"
          for fileLines in `cat $FileNames`;
            do
              subnet=`echo "$fileLines" | cut -d'-' -f2`
              terraform init
              terraform workspace select -or-create=true prod-$subnet
              terraform apply -var-file=$fileLines -auto-approve
            done
                                